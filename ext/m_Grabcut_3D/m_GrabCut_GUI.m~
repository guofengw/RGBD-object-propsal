function m_GrabCut_GUI
close all

m_create_components();
end

function m_create_components()
%  Create and hide the UI as it is being constructed.
f = figure('Visible','on','Position',[360,500,1320,750]);

% Construct the pushbuttons
h_load = uicontrol('Style','pushbutton','String','Color','Position', ...
                   [450,20,70,25], 'Callback', @loadImage_Callback);
         
h_load_d = uicontrol('Style','pushbutton','String','Depth','Position', ...
                     [600,20,70,25], 'Callback', @loadDepth_Callback);
         
h_poly = uicontrol('Style','pushbutton','String','Polygon','Position', ...
                   [800,20,70,25],'Callback', @MarkPolygon_Callback);
               
h_run = uicontrol('Style','pushbutton','String','Run','Position', ...
                  [1200,20,70,25], 'Callback', @Run_Callback);
         
         
align([h_load, h_load_d, h_poly, h_run],'Fixed', 30,'bottom');

% create axes and texts
handles = guihandles(f);

handles.h_display_1 = axes('Units','Pixels','Position',[10,420,400,300]);
uicontrol('Style','text','Position',[100,725,200,20],'String', ...
          'Original Color Image', 'FontSize',12, 'FontWeight', 'bold');

handles.h_display_2 = axes('Units','Pixels','Position',[455,420,400,300]);
uicontrol('Style','text','Position',[520,725,250,20],'String', ...
          'GrabCut(RGB) Segment', 'FontSize',12, 'FontWeight', 'bold');
      
handles.h_display_3 = axes('Units','Pixels','Position',[900,420,400,300]);
uicontrol('Style','text','Position',[1000,725,200,20],'String', ...
          'GrabCut(RGB) Mask', 'FontSize',12, 'FontWeight', 'bold');

handles.h_display_4 = axes('Units','Pixels','Position',[10,70,400,300]);
uicontrol('Style','text','Position',[100,380,200,20],'String', ...
          'ROI Polygon', 'FontSize',12, 'FontWeight', 'bold');
      
handles.h_display_5 = axes('Units','Pixels','Position',[455,70,400,300]);
uicontrol('Style','text','Position',[520,380,250,20],'String', ...
          'GrabCut(RGB-D) Segment', 'FontSize',12, 'FontWeight', 'bold');
      
handles.h_display_6 = axes('Units','Pixels','Position',[900,70,400,300]);
uicontrol('Style','text','Position',[1000,380,200,20],'String', ...
          'GrabCut(RGB-D) Mask', 'FontSize',12, 'FontWeight', 'bold');
guidata(f, handles);


end

function loadImage_Callback(source, eventdata)
FilterSpec = ['*'];
[FileName,PathName,FilterIndex] = uigetfile(FilterSpec);
fullFileName = strcat(PathName, FileName);
global I;
I = imread(fullFileName);
handles = guidata(gcbo);
imshow(I, 'Parent', handles.h_display_1);
end

function loadDepth_Callback(source, eventdata)
FilterSpec = ['*'];
[FileName,PathName,FilterIndex] = uigetfile(FilterSpec);
fullFileName = strcat(PathName, FileName);
global D;
D = double(imread(fullFileName));
D = D/100; % centimeters
end


function MarkPolygon_Callback(hObject, eventdata)
global fixedBG;
global I; 

handles = guidata(gcbo);
disp('select ROI ...');
axes(handles.h_display_4);
fixedBG = ~roipoly(I);

%%% show red bounds:
% imBounds = I;
% bounds = double(abs(edge(fixedBG)));
% se = strel('square',3);
% bounds = 1 - imdilate(bounds,se);
% imBounds(:,:,2) = imBounds(:,:,2).*uint8(bounds);
% imBounds(:,:,3) = imBounds(:,:,3).*uint8(bounds);
% imshow(imBounds, 'Parent', handles.h_display_1);

% show seg
im = I.* repmat(uint8(~fixedBG) , [1 1 3]);
imshow(im, 'Parent', handles.h_display_4);
end

function Run_Callback(hObject, eventdata)

global fixedBG;
global I;
global D;
disp('Run GrabCut ...');
fx_d = 5.8262448167737955e+02;
fy_d = 5.8269103270988637e+02;
cx_d = 3.1304475870804731e+02;
cy_d = 2.3844389626620386e+02;

Kd = [fx_d 0 (cx_d-40);
      0 fy_d (cy_d-45);
      0 0 1];
[h, w, ~] = size(I);
[xx,yy] = meshgrid(1:w, 1:h);

X = (xx - Kd(1,3)) .* D / fx_d;
Y = (yy - Kd(2,3)) .* D / fy_d;
Z = D;
points = cat(3, X, Y, Z);

im = double(I);
mask_fixed_fg = false(h, w);
mask_fixed_bg = false(h, w);
handles = guidata(gcbo);

% run RGB grab cut
cd ../m_Grabcut/;
seg_rgb = m_Grabcut(im, ~fixedBG, mask_fixed_fg, mask_fixed_bg);
result_rgb = I.* repmat(uint8(seg_rgb), [1 1 3]);
imshow(result_rgb, 'Parent', handles.h_display_2);
imshow(logical(seg_rgb), 'Parent', handles.h_display_3);
cd ../InstanceSEG/;

% run RGBD grab cut
seg = m_Grabcut( im,points, ~fixedBG, mask_fixed_fg, mask_fixed_bg);
result = I.* repmat(uint8(seg), [1 1 3]);
imshow(result, 'Parent', handles.h_display_5);
imshow(logical(seg), 'Parent', handles.h_display_6);





end